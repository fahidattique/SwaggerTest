//
// DefaultAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



open class DefaultAPI: APIBase {
    /**
     Gets some persons
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func personsGet(completion: @escaping ((_ data: [Person]?,_ error: Error?) -> Void)) {
        personsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Gets some persons
     - GET /persons
     - Returns a list containing all persons. The list supports paging.
     - examples: [{contentType=application/json, example=[ {
  "phone" : "aeiou",
  "fullName" : "aeiou"
} ]}]

     - returns: RequestBuilder<[Person]> 
     */
    open class func personsGetWithRequestBuilder() -> RequestBuilder<[Person]> {
        let path = "/persons"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:Any?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Person]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Creates a person
     
     - parameter person: (body) The person to create. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func personsPost(person: Person? = nil, completion: @escaping ((_ error: Error?) -> Void)) {
        personsPostWithRequestBuilder(person: person).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Creates a person
     - POST /persons
     - Adds a new person to the persons list.
     
     - parameter person: (body) The person to create. (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func personsPostWithRequestBuilder(person: Person? = nil) -> RequestBuilder<Void> {
        let path = "/persons"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = person?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
